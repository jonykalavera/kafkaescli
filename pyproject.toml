##############################################################################
# BLACK SETTINGS                                                             #
##############################################################################
[tool.black]
skip_string_normalization = true
line_length = 119
target-version = ['py36']
exclude = '/(\__pycache__|\.pytest_cache|\.mypy_cache|\.tox|\.venv)/'


##############################################################################
# COVERAGE SETTINGS                                                          #
##############################################################################
[tool.coverage.run]
omit = []

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "logger = logging.getLogger.__name__.",
    "[A-Z_][A-Z0-9_]* = .*",
    "from .* import .*",
    "import .*",
    "if 0:",
    "if __name__ == .__main__.:",
    "collections.namedtuple"
]
ignore_errors = true
show_missing = true
skip_covered = true

##############################################################################
# ISORT SETTINGS                                                             #
##############################################################################
[tool.isort]
profile = "black"

##############################################################################
# PYLINT SETTINGS                                                            #
##############################################################################
[tool.pylint.messages_control]
disable = "missing-module-docstring, missing-class-docstring, missing-function-docstring, missing-method-docstring, too-few-public-methods"

[tool.pylint.format]
max-line-length = "119"

##############################################################################
# MYPY SETTINGS                                                            #
##############################################################################
[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true

##############################################################################
# POETRY SETTINGS                                                            #
##############################################################################
[tool.poetry]
name = "kafkaescli"
version = "0.1.9"
description = "A magical kafka command line interface."
repository = "https://github.com/jonykalavera/kafkaescli"
readme = "README.md"
authors = ["Jony Kalavera <mr.jony@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.9"
pydantic = "^1.9.0"
aiokafka = "^0.7.2"
typer = "^0.4.1"
aiohttp = "^3.8.1"
fastapi = "^0.75.1"
uvicorn = "^0.17.6"
pytest-cov = "^3.0.0"
meiga = "^1.3.1"
dependency-injector = "^4.39.1"

[tool.poetry.dev-dependencies]
black = "^22.1.0"
pylint = "^2.12.2"
isort = "^5.10.1"
pytest = "^6.2.5"
pytest-mock = "^3.7.0"
ipython = "^8.0.1"
mypy = "^0.931"
pytest-faker = "^2.0.0"
types-requests = "^2.27.9"
ipdb = "^0.13.9"
pydantic-factories = "^1.2.7"
py2puml = {git = "https://github.com/jonykalavera/py2puml.git", branch = "add-methods"}
Sphinx = "^4.5.0"
sphinx-rtd-dark-mode = "^1.2.4"
pylint-pydantic = "^0.1.4"
coveralls = "^3.3.1"
PyYAML = "^6.0"
myst-parser = "^0.17.2"
sphinxcontrib-plantuml = "^0.23"
types-setuptools = "^57.4.14"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
